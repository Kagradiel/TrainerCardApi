// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainerCardBackEnd.Context;

#nullable disable

namespace TrainerCardBackEnd.Migrations
{
    [DbContext(typeof(TrainerDataContext))]
    partial class TrainerDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainerCardBackEnd.Entities.PokeBox", b =>
                {
                    b.Property<long>("BoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BoxId"));

                    b.Property<string>("PokemonsIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrainerId")
                        .HasColumnType("bigint");

                    b.HasKey("BoxId");

                    b.HasIndex("TrainerId")
                        .IsUnique();

                    b.ToTable("PokeBoxes");
                });

            modelBuilder.Entity("TrainerCardBackEnd.Entities.Trainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2");

                    b.Property<short>("City")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<short>("Region")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("TrainerCardBackEnd.Entities.PokeBox", b =>
                {
                    b.HasOne("TrainerCardBackEnd.Entities.Trainer", "Trainer")
                        .WithOne("MyPokebox")
                        .HasForeignKey("TrainerCardBackEnd.Entities.PokeBox", "TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("TrainerCardBackEnd.Entities.Trainer", b =>
                {
                    b.Navigation("MyPokebox")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
